// Code generated by mockery v1.0.0. DO NOT EDIT.

package backupmock

import backup "github.com/slok/bilrost/internal/backup"
import context "context"
import mock "github.com/stretchr/testify/mock"
import model "github.com/slok/bilrost/internal/model"

// Backupper is an autogenerated mock type for the Backupper type
type Backupper struct {
	mock.Mock
}

// BackupOrGet provides a mock function with given fields: ctx, app, data
func (_m *Backupper) BackupOrGet(ctx context.Context, app model.App, data backup.Data) (*backup.Data, error) {
	ret := _m.Called(ctx, app, data)

	var r0 *backup.Data
	if rf, ok := ret.Get(0).(func(context.Context, model.App, backup.Data) *backup.Data); ok {
		r0 = rf(ctx, app, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*backup.Data)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, model.App, backup.Data) error); ok {
		r1 = rf(ctx, app, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteBackup provides a mock function with given fields: ctx, app
func (_m *Backupper) DeleteBackup(ctx context.Context, app model.App) error {
	ret := _m.Called(ctx, app)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.App) error); ok {
		r0 = rf(ctx, app)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
